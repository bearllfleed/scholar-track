// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3
// Source: storage.proto

package storage_client

import (
	"context"

	"github.com/bearllfleed/scholar-track/rpc/storage/storage"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	DeleteBusinessFilesRequest = storage.DeleteBusinessFilesRequest
	FileDeleteRequest          = storage.FileDeleteRequest
	FileDeleteResponse         = storage.FileDeleteResponse
	FileDownloadRequest        = storage.FileDownloadRequest
	FileDownloadResponse       = storage.FileDownloadResponse
	FileInfoRequest            = storage.FileInfoRequest
	FileInfoResponse           = storage.FileInfoResponse
	FileUploadRequest          = storage.FileUploadRequest
	FileUploadResponse         = storage.FileUploadResponse
	GetBussinessFilesRequest   = storage.GetBussinessFilesRequest
	GetBussinessFilesResponse  = storage.GetBussinessFilesResponse

	Storage interface {
		FileUpload(ctx context.Context, in *FileUploadRequest, opts ...grpc.CallOption) (*FileUploadResponse, error)
		FileDownload(ctx context.Context, in *FileDownloadRequest, opts ...grpc.CallOption) (*FileDownloadResponse, error)
		FileDelete(ctx context.Context, in *FileDeleteRequest, opts ...grpc.CallOption) (*FileDeleteResponse, error)
		FileInfo(ctx context.Context, in *FileInfoRequest, opts ...grpc.CallOption) (*FileInfoResponse, error)
		GetBussinessFiles(ctx context.Context, in *GetBussinessFilesRequest, opts ...grpc.CallOption) (*GetBussinessFilesResponse, error)
		DeleteBusinessFiles(ctx context.Context, in *DeleteBusinessFilesRequest, opts ...grpc.CallOption) (*FileDeleteResponse, error)
	}

	defaultStorage struct {
		cli zrpc.Client
	}
)

func NewStorage(cli zrpc.Client) Storage {
	return &defaultStorage{
		cli: cli,
	}
}

func (m *defaultStorage) FileUpload(ctx context.Context, in *FileUploadRequest, opts ...grpc.CallOption) (*FileUploadResponse, error) {
	client := storage.NewStorageClient(m.cli.Conn())
	return client.FileUpload(ctx, in, opts...)
}

func (m *defaultStorage) FileDownload(ctx context.Context, in *FileDownloadRequest, opts ...grpc.CallOption) (*FileDownloadResponse, error) {
	client := storage.NewStorageClient(m.cli.Conn())
	return client.FileDownload(ctx, in, opts...)
}

func (m *defaultStorage) FileDelete(ctx context.Context, in *FileDeleteRequest, opts ...grpc.CallOption) (*FileDeleteResponse, error) {
	client := storage.NewStorageClient(m.cli.Conn())
	return client.FileDelete(ctx, in, opts...)
}

func (m *defaultStorage) FileInfo(ctx context.Context, in *FileInfoRequest, opts ...grpc.CallOption) (*FileInfoResponse, error) {
	client := storage.NewStorageClient(m.cli.Conn())
	return client.FileInfo(ctx, in, opts...)
}

func (m *defaultStorage) GetBussinessFiles(ctx context.Context, in *GetBussinessFilesRequest, opts ...grpc.CallOption) (*GetBussinessFilesResponse, error) {
	client := storage.NewStorageClient(m.cli.Conn())
	return client.GetBussinessFiles(ctx, in, opts...)
}

func (m *defaultStorage) DeleteBusinessFiles(ctx context.Context, in *DeleteBusinessFilesRequest, opts ...grpc.CallOption) (*FileDeleteResponse, error) {
	client := storage.NewStorageClient(m.cli.Conn())
	return client.DeleteBusinessFiles(ctx, in, opts...)
}
