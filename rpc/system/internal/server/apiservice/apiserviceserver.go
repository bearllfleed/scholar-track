// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3
// Source: system.proto

package server

import (
	"context"

	"github.com/bearllflee/scholar-track/rpc/system/internal/logic/apiservice"
	"github.com/bearllflee/scholar-track/rpc/system/internal/svc"
	"github.com/bearllflee/scholar-track/rpc/system/system"
)

type ApiServiceServer struct {
	svcCtx *svc.ServiceContext
	system.UnimplementedApiServiceServer
}

func NewApiServiceServer(svcCtx *svc.ServiceContext) *ApiServiceServer {
	return &ApiServiceServer{
		svcCtx: svcCtx,
	}
}

func (s *ApiServiceServer) CreateApi(ctx context.Context, in *system.CreateApiReq) (*system.CreateApiResp, error) {
	l := apiservicelogic.NewCreateApiLogic(ctx, s.svcCtx)
	return l.CreateApi(in)
}

func (s *ApiServiceServer) QueryAllApi(ctx context.Context, in *system.QueryAllApiReq) (*system.QueryAllApiResp, error) {
	l := apiservicelogic.NewQueryAllApiLogic(ctx, s.svcCtx)
	return l.QueryAllApi(in)
}

func (s *ApiServiceServer) DeleteApi(ctx context.Context, in *system.DeleteApiReq) (*system.DeleteApiResp, error) {
	l := apiservicelogic.NewDeleteApiLogic(ctx, s.svcCtx)
	return l.DeleteApi(in)
}

func (s *ApiServiceServer) UpdateApi(ctx context.Context, in *system.UpdateApiReq) (*system.UpdateApiResp, error) {
	l := apiservicelogic.NewUpdateApiLogic(ctx, s.svcCtx)
	return l.UpdateApi(in)
}

func (s *ApiServiceServer) QueryApiDetail(ctx context.Context, in *system.QueryApiDetailReq) (*system.QueryApiDetailResp, error) {
	l := apiservicelogic.NewQueryApiDetailLogic(ctx, s.svcCtx)
	return l.QueryApiDetail(in)
}
