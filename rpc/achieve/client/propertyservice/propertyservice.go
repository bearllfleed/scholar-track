// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3
// Source: achieve.proto

package propertyservice

import (
	"context"

	"github.com/bearllfleed/scholar-track/rpc/achieve/achieve"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Category                = achieve.Category
	CreateCategoryReq       = achieve.CreateCategoryReq
	CreateCategoryResp      = achieve.CreateCategoryResp
	CreatePropertyReq       = achieve.CreatePropertyReq
	CreatePropertyResp      = achieve.CreatePropertyResp
	DeleteAchieveReq        = achieve.DeleteAchieveReq
	DeleteAchieveResp       = achieve.DeleteAchieveResp
	DeleteCategoryReq       = achieve.DeleteCategoryReq
	DeleteCategoryResp      = achieve.DeleteCategoryResp
	DeletePropertyReq       = achieve.DeletePropertyReq
	DeletePropertyResp      = achieve.DeletePropertyResp
	Property                = achieve.Property
	QueryCategoryDetailReq  = achieve.QueryCategoryDetailReq
	QueryCategoryListReq    = achieve.QueryCategoryListReq
	QueryCategoryListResp   = achieve.QueryCategoryListResp
	QueryCategoryResp       = achieve.QueryCategoryResp
	QueryPropertyDetailReq  = achieve.QueryPropertyDetailReq
	QueryPropertyDetailResp = achieve.QueryPropertyDetailResp
	QueryPropertyListReq    = achieve.QueryPropertyListReq
	QueryPropertyListResp   = achieve.QueryPropertyListResp
	UpdateCategoryReq       = achieve.UpdateCategoryReq
	UpdateCategoryResp      = achieve.UpdateCategoryResp
	UpdatePropertyReq       = achieve.UpdatePropertyReq
	UpdatePropertyResp      = achieve.UpdatePropertyResp
	UploadAchieveReq        = achieve.UploadAchieveReq
	UploadAchieveResp       = achieve.UploadAchieveResp

	PropertyService interface {
		CreateProperty(ctx context.Context, in *CreatePropertyReq, opts ...grpc.CallOption) (*CreatePropertyResp, error)
		QueryPropertyDetail(ctx context.Context, in *QueryPropertyDetailReq, opts ...grpc.CallOption) (*QueryPropertyDetailResp, error)
		QueryPropertyList(ctx context.Context, in *QueryPropertyListReq, opts ...grpc.CallOption) (*QueryPropertyListResp, error)
		DeleteProperty(ctx context.Context, in *DeletePropertyReq, opts ...grpc.CallOption) (*DeletePropertyResp, error)
		UpdateProperty(ctx context.Context, in *UpdatePropertyReq, opts ...grpc.CallOption) (*UpdatePropertyResp, error)
	}

	defaultPropertyService struct {
		cli zrpc.Client
	}
)

func NewPropertyService(cli zrpc.Client) PropertyService {
	return &defaultPropertyService{
		cli: cli,
	}
}

func (m *defaultPropertyService) CreateProperty(ctx context.Context, in *CreatePropertyReq, opts ...grpc.CallOption) (*CreatePropertyResp, error) {
	client := achieve.NewPropertyServiceClient(m.cli.Conn())
	return client.CreateProperty(ctx, in, opts...)
}

func (m *defaultPropertyService) QueryPropertyDetail(ctx context.Context, in *QueryPropertyDetailReq, opts ...grpc.CallOption) (*QueryPropertyDetailResp, error) {
	client := achieve.NewPropertyServiceClient(m.cli.Conn())
	return client.QueryPropertyDetail(ctx, in, opts...)
}

func (m *defaultPropertyService) QueryPropertyList(ctx context.Context, in *QueryPropertyListReq, opts ...grpc.CallOption) (*QueryPropertyListResp, error) {
	client := achieve.NewPropertyServiceClient(m.cli.Conn())
	return client.QueryPropertyList(ctx, in, opts...)
}

func (m *defaultPropertyService) DeleteProperty(ctx context.Context, in *DeletePropertyReq, opts ...grpc.CallOption) (*DeletePropertyResp, error) {
	client := achieve.NewPropertyServiceClient(m.cli.Conn())
	return client.DeleteProperty(ctx, in, opts...)
}

func (m *defaultPropertyService) UpdateProperty(ctx context.Context, in *UpdatePropertyReq, opts ...grpc.CallOption) (*UpdatePropertyResp, error) {
	client := achieve.NewPropertyServiceClient(m.cli.Conn())
	return client.UpdateProperty(ctx, in, opts...)
}
